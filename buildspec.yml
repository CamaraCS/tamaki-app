version: 0.2

env:
  variables:
    JAVA_HOME: "/usr/lib/jvm/java-8-openjdk-amd64"
  parameter-store:
    LOGIN_PASSWORD: /CodeBuild/dockerLoginPassword
    USER: /CodeBuild/dockerLoginUser
    CONSUMER_KEY: /CodeBuild/consumer_key
    CONSUMER_KEY_SECRET: /CodeBuild/consumer_key_secret
    ACCESS_TOKEN: /CodeBuild/access_token
    ACCESS_TOKEN_SECRET: /CodeBuild/access_token_secret
    MONGODB_HOST: /CodeBuild/CodeBuild/MONGODB_HOST
    
phases:
  install:
    commands:
      - apt-get update -y
      - apt-get install -y maven
      -  docker login -u $USER -p $LOGIN_PASSWORD
    runtime-versions:
      java: openjdk8
  build:
    commands:
      - mvn package -Dtwitter.consumer.key=$CONSUMER_KEY -Dtwitter.consumer.key.secret=$CONSUMER_KEY_SECRET -Dtwitter.access.token=$ACCESS_TOKEN -Dtwitter.access.token.secret=$ACCESS_TOKEN_SECRET -Dspring.data.mongodb.host=$MONGODB_HOST
  post_build:
    commands:
      - docker build -t docker.io/tamakirtt/alpine_confd_jdk18 .
      - docker push docker.io/tamakirtt/alpine_confd_jdk18:latest
      - printf '[{"name":"twitte","imageUri":"docker.io/tamakirtt/alpine_confd_jdk18:latest"}]' > imagens.json
artifacts:
  files:
    - imagens.json
  discard-paths: yes